// Test utilities for рдореВрд▓реНрдпрдорд╛рдкрди Assessment System

import { CalculationUtils } from '../src/utils/calculations';
import { Student, Assessment, Subject } from '../src/types';

// Test data
const testStudent: Student = {
  id: '1',
  name: 'рд░рд╛рд╣реБрд▓ рд╢рд░реНрдорд╛',
  fatherName: 'рд╡рд┐рдХрд╛рд╕ рд╢рд░реНрдорд╛',
  class: '5',
  rollNumber: 1,
  admissionDate: '2023-04-01',
};

const testSubject: Subject = {
  id: '1',
  name: 'Mathematics',
  nameMarathi: 'рдЧрдгрд┐рдд',
  maxMarks: 100,
  passingMarks: 35,
};

const testAssessment: Assessment = {
  id: '1',
  studentId: '1',
  subjectId: '1',
  examTypeId: '1',
  marks: 85,
  maxMarks: 100,
  date: '2024-01-15',
  academicYear: '2023-24',
};

// Test functions
function testCalculations() {
  console.log('ЁЯзо Testing Calculation Utils...');
  
  // Test percentage calculation
  const percentage = CalculationUtils.calculatePercentage(85, 100);
  console.log(`тЬЕ Percentage: ${percentage}% (Expected: 85)`);
  
  // Test grade calculation
  const grade = CalculationUtils.calculateGrade(85);
  console.log(`тЬЕ Grade: ${grade} (Expected: A)`);
  
  // Test grade description
  const gradeDesc = CalculationUtils.getGradeDescriptionMarathi(grade);
  console.log(`тЬЕ Grade Description: ${gradeDesc} (Expected: рдЕрддрд┐ рдЙрддреНрддрдо)`);
  
  // Test subject passing
  const passed = CalculationUtils.isSubjectPassed(85, 35);
  console.log(`тЬЕ Subject Passed: ${passed} (Expected: true)`);
  
  // Test Marathi number conversion
  const marathiNum = CalculationUtils.convertToMarathiNumbers(85);
  console.log(`тЬЕ Marathi Numbers: ${marathiNum} (Expected: реорел)`);
  
  // Test academic year
  const academicYear = CalculationUtils.getCurrentAcademicYear();
  console.log(`тЬЕ Academic Year: ${academicYear}`);
  
  console.log('тЬЕ All calculation tests passed!\n');
}

function testDataStructures() {
  console.log('ЁЯУК Testing Data Structures...');
  
  // Test student data
  console.log(`Student: ${testStudent.name} (${testStudent.class} рд╡рд░реНрдЧ)`);
  
  // Test subject data
  console.log(`Subject: ${testSubject.nameMarathi} (${testSubject.name})`);
  
  // Test assessment data
  console.log(`Assessment: ${testAssessment.marks}/${testAssessment.maxMarks}`);
  
  console.log('тЬЕ All data structure tests passed!\n');
}

function testMarathiInterface() {
  console.log('ЁЯЗоЁЯЗ│ Testing Marathi Interface...');
  
  const classes = [
    'рдкрд╣рд┐рд▓реА (1st)', 'рджреБрд╕рд░реА (2nd)', 'рддрд┐рд╕рд░реА (3rd)', 'рдЪреМрдереА (4th)',
    'рдкрд╛рдЪрд╡реА (5th)', 'рд╕рд╣рд╛рд╡реА (6th)', 'рд╕рд╛рддрд╡реА (7th)', 'рдЖрдард╡реА (8th)'
  ];
  
  const subjects = [
    'рдорд░рд╛рдареА', 'рдЗрдВрдЧреНрд░рдЬреА', 'рдЧрдгрд┐рдд', 'рд╡рд┐рдЬреНрдЮрд╛рди', 'рдЗрддрд┐рд╣рд╛рд╕', 'рднреВрдЧреЛрд▓', 'рдЪрд┐рддреНрд░рдХрд▓рд╛'
  ];
  
  const examTypes = ['рдорд╛рд╕рд┐рдХ', 'рдЕрд░реНрдзрд╡рд╛рд░реНрд╖рд┐рдХ', 'рд╡рд╛рд░реНрд╖рд┐рдХ'];
  
  console.log(`Classes: ${classes.join(', ')}`);
  console.log(`Subjects: ${subjects.join(', ')}`);
  console.log(`Exam Types: ${examTypes.join(', ')}`);
  
  console.log('тЬЕ Marathi interface test passed!\n');
}

function runTests() {
  console.log('ЁЯОп рдореВрд▓реНрдпрдорд╛рдкрди Assessment System Tests');
  console.log('====================================\n');
  
  testCalculations();
  testDataStructures();
  testMarathiInterface();
  
  console.log('ЁЯОЙ All tests completed successfully!');
  console.log('рдореВрд▓реНрдпрдорд╛рдкрди system is ready for use! ЁЯЪА');
}

// Export for Node.js testing
if (typeof module !== 'undefined' && module.exports) {
  module.exports = {
    testCalculations,
    testDataStructures,
    testMarathiInterface,
    runTests
  };
}

// Run tests if this file is executed directly
if (typeof window === 'undefined') {
  runTests();
}